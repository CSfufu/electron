name: CI Packaging Electron App

on:
  push:
    branches:
      - main 
    tags:
      - 'v*.*.*' 
  workflow_dispatch: 

jobs:
  build:
    strategy:
      fail-fast: false 
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read 

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' 
        cache: 'npm'

    - name: Install dependencies
      run: npm ci 

    - name: Build Electron app
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          npm run build:app -- --linux
        elif [ "$RUNNER_OS" == "macOS" ]; then
          npm run build:app -- --mac
        elif [ "$RUNNER_OS" == "Windows" ]; then
          npm run build:app -- --win
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-desktop-app-${{ matrix.os }} 
        path: release/ 
        if-no-files-found: error 

  create-release:
    if: startsWith(github.ref, 'refs/tags/v') # Only run for tags like v1.0.0
    needs: build 
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts 

      - name: List downloaded files (for debugging)
        run: |
          ls -R artifacts
          echo "Tag being released: ${{ github.ref_name }}"

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}.
            Application built to load: http://localhost:8001
            (Further release notes can be added here)
          draft: false      # Set to true to create a draft release
          prerelease: false # Set to true if this is a pre-release
          files: |
            artifacts/my-desktop-app-macos-latest/release/MyApp*.dmg
            artifacts/my-desktop-app-macos-latest/release/MyApp*.zip
            artifacts/my-desktop-app-windows-latest/release/MyApp*Setup*.exe
            artifacts/my-desktop-app-windows-latest/release/MyApp*.zip
            artifacts/my-desktop-app-ubuntu-latest/release/MyApp*.AppImage
            # Add any other files like .blockmap if needed
